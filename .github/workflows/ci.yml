name: CI

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: ["ubuntu-latest", "macos-latest", "windows-latest"]

    steps:
    - uses: actions/checkout@v1
    - uses: olafurpg/setup-scala@v10
      with:
        java-version: 8
    - name: Mount caches
      uses: actions/cache@v2
      with:
        path: |
          ~/.sbt
          ~/.ivy2/cache
          ~/.cache/coursier
        key: ${{ runner.os }}-sbt-${{ hashFiles('**/*.sbt') }}
    - name: Remove native tests (Windows only)
      if: ${{ runner.os == 'Windows' }}
      run: |
        rm -rf examples/scalapb-crossproject
      shell: bash
    - name: Compile and test
      run: |
       sbt test
       cd examples
       for d in */ ; do cd "$d" && sbt test && cd ../ ; done
      shell: bash
    - name: Format check
      if: ${{ runner.os == 'Linux' }}
      run: |
        sbt scalafmtCheck test:scalafmtCheck scalafmtSbtCheck
  scripted:
    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "macos-latest", "windows-latest"]
        scripted-sbt: ["1.2.8", "1.3.13", "project"]

    steps:
    - uses: actions/checkout@v1
    - uses: olafurpg/setup-scala@v10
      with:
        java-version: 11
    - name: Mount caches
      uses: actions/cache@v2
      with:
        path: |
          ~/.sbt
          ~/.ivy2/cache
          ~/.cache/coursier
        key: ${{ runner.os }}-sbt-${{ hashFiles('**/*.sbt') }}
    - name: Compile and run scripted tests with older version
      if: ${{ matrix.scripted-sbt != 'project' }}
      env:
        SCRIPTED_SBT: ${{ matrix.scripted-sbt }}
      run: |
       sbt "set scriptedSbt := \"$SCRIPTED_SBT\"" scripted
      shell: bash
    - name: Compile and run scripted tests with project version
      if: ${{ matrix.scripted-sbt == 'project' }}
      run: |
       sbt "set scriptedSbt := sbtVersion.value" scripted
      shell: bash
  # Single final job for mergify.
  ci-passed:
    runs-on: ubuntu-latest
    needs: [build, scripted]
    steps:
    - run: ':'
